name: Rust Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

jobs:
  # Check rustfmt
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt
      - run: sh ./fmt.sh

  # Check clippy.  This doesn't check ARM though.
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: clippy
      - run: sh ./clippy.sh

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly, "1.40"]
    steps:
      - uses: actions/checkout@v4
        if: github.event.inputs.git-ref == ''
      - uses: actions/checkout@v4
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Run syntax check
        run: cargo check --workspace
      - name: Clean (for coverage safety)
        run: cargo clean
      - name: Tests
        run: cargo test --workspace --all-features --no-fail-fast
        env:
          RUST_BACKTRACE: full
  publish:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta'
    needs: [tests, clippy, rustfmt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt, clippy
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@cb425203a562475bca039ba4dbf90c7f9ac790f4 # v4.1.0
        with:
          # dry_run: true
          extra_plugins: |
            @google/semantic-release-replace-plugin
            @semantic-release/git
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/github
            @semantic-release-cargo/semantic-release-cargo
            @commitlint/config-conventional
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
